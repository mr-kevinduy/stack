services:
    app:
        image: kevinduy/php
        restart: always
        tty: true
        volumes:
            - ./ws-app/:/var/www/app
            - vendor-volume:/var/www/app/vendor
        working_dir: /var/www/app
        ports:
            - "8000:8000"
        links:
            - db
            - redis
        depends_on:
            - db
            - redis
        environment:
            - CHOKIDAR_USEPOLLING=true

    nginx:
        image: kevinduy/nginx
        restart: always
        tty: true
        volumes:
            - ./ws-app:/var/www/app
            - ./ws-php:/var/www/ws-php
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
            - ./docker/nginx/install:/install
        ports:
            - "80:80"
            - "81:81"
        command: /bin/bash -c "nginx"

    db:
        image: mysql:8
        restart: always
        volumes:
            - ./.docker/db/mysql:/var/lib/mysql
            - ./.docker/db/data:/var/data
            - ./docker/mysql/conf.d/db.cnf:/etc/mysql/conf.d/db.cnf
        working_dir: /var/data
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: laravel
            MYSQL_ROOT_PASSWORD: root

    redis:
        image: redis
        restart: always
        ports:
            - "6379:6379"
        volumes: 
            - ./.docker/redis/cache:/data
        command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        ports:
            - "8080:80"
        depends_on:
            - db
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            PMA_USER: root
            PMA_PASSWORD: root
            PMA_USER_CONFIG_BASE64: PD9waHAKJGNmZ1snTG9naW5Db29raWVWYWxpZGl0eSddID0gODY0MDA7
        volumes:
            - ./.docker/phpmyadmin/sessions:/sessions

    ws-transcode:
        build: ./docker/transcode
        container_name: transcode-service
        tty: true
        # restart: always
        volumes:
          - ./ws-transcode:/var/app/transcode-service
          - ./.docker/transcode-service/video-input:/var/storage/video-input
          - ./.docker/transcode-service/video-output:/var/storage/video-output
          - ./.docker/transcode-service/log/transcode-service:/var/log/transcode-service
        working_dir: /var/app/transcode-service
        # extra_hosts:
        #   - "github.com:192.30.255.113"
        #   - "assets-cdn.github.com:151.101.0.133"
        #   - "avatars2.githubusercontent.com:151.101.64.133"
        #   - "avatars1.githubusercontent.com:151.101.64.133"
        #   - "avatars0.githubusercontent.com:151.101.64.133"
        #   - "collector.githubapp.com:52.73.244.200"
        #   - "api.github.com:192.30.255.117"
        #   - "help.github.com:185.199.109.153"
        #   - "codeload.github.com:192.30.255.120"
        #   - "gist.github.com:192.30.255.118"

    ws-php:
        image: kevinduy/php
        restart: always
        tty: true
        volumes:
            - ./ws-php/:/var/www/ws-php
        working_dir: /var/www/ws-php
        ports:
            - "8100:8100"
        links:
            - db
            - redis
        depends_on:
            - db
            - redis
        environment:
            - CHOKIDAR_USEPOLLING=true

    ws-node:
        image: node:20
        tty: true
        restart: always
        volumes:
            - ./ws-node:/var/app
        working_dir: /var/app
        ports:
            - "3000:3000"
            - "4000:4000"
        links:
            - db
        environment:
            - CHOKIDAR_USEPOLLING=true

    ws-python:
        image: python:3
        tty: true
        restart: always
        volumes:
            - ./ws-py:/var/app
        working_dir: /var/app
        ports:
            - "3001:3001"
        links:
            - db

    ws-go:
        image: golang:1.21
        tty: true
        restart: always
        volumes:
            - ./ws-go:/var/app
        working_dir: /var/app
        ports:
            - "3002:3002"
        links:
            - db

volumes:
    vendor-volume:
        driver: local